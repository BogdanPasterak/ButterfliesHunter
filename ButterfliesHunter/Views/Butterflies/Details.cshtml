@model ButterfliesHunter.Models.Butterfly

@{
    ViewData["Title"] = "Details";
}

<h1>Details of <span class="text-info">@Model.Name</span></h1>
<div class="row">
    <div class="col-lg-8">
        <img src="@Model.ImgURL" alt="Image of @Model.Name" class="img-fluid full-width" />
    </div>
    <table class="col-lg-4">
        <tr>
            <td>Ranking</td>
            <td>@Model.Ranking</td>
        </tr>
        <tr>
            <td>Range</td>
            <td>@Model.Range</td>
        </tr>
        @if (Model.IsProtected)
        {
            <tr><td class="text-danger">Protected</td></tr>
        }
        <tr>
            <td>Author ID</td>
            <td>@Model.AuthorId</td>
        </tr>
        <tr><td>Description</td></tr>
        <tr><td colspan="2">@Model.Description</td></tr>
        <tr>
            <td class="text-center"><a class="btn btn-dark" asp-action="Index">Back</a></td>
            <td class="text-center">
                <a class="btn btn-dark" asp-controller="Hunters" asp-action="Void" asp-route-id="@Model.Id">
                    Vote
                </a>
            </td>
        </tr>
    </table>
</div>
<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>

<div class="col-8 align-content-center">
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>


    <div id="map"></div>
    <script>
        // Initialize and add the map
        function initMap() {
            // The location of Uluru
            var uluru = { lat: 54.95, lng: -7.72 };
            // The map, centered at Uluru
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 12, center: uluru });
            // The marker, positioned at Uluru
            var marker = new google.maps.Marker({ position: uluru, map: map });
        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=_____&callback=initMap">
    </script>



</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
